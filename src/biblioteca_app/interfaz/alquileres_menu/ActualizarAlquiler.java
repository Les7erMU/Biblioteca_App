/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package biblioteca_app.interfaz.alquileres_menu;

import biblioteca_app.model.Devuelto;

import biblioteca_app.dao.AlquilerDAO;
import biblioteca_app.model.Alquiler;
import biblioteca_app.model.Cliente;
import biblioteca_app.model.Devuelto;
import biblioteca_app.model.Libro;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
/**
 *
 * @author Olga
 */
public class ActualizarAlquiler extends javax.swing.JDialog {
    
    private AlquilerDAO alquilerDAO;
    
    private void limpiarCampos() {
        jTextFieldIngresoIdAlquilerParaActualizar.setText("");
        jTextFieldIngresoIdLibro.setText("");
        jTextFieldIngresoIdCliente.setText("");
        jTextFieldIngresoFInicio.setText("");
        jTextFieldIngresoFFin.setText("");
        jComboBox1.setSelectedIndex(0);
    }

    /**
     * Creates new form ActualizarAlquiler
     */
    public ActualizarAlquiler(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        alquilerDAO = new AlquilerDAO();
        
        for(Devuelto dev : Devuelto.values()){
            jComboBox1.addItem(dev.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldIngresoIdAlquilerParaActualizar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldIngresoIdLibro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldIngresoIdCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldIngresoFInicio = new javax.swing.JTextField();
        jTextFieldIngresoFFin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButtonActualizar = new javax.swing.JButton();
        jButtonRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ingrese el Id del Alquiler para acualizar:");

        jLabel2.setText("Ingrese Id del Libro:");

        jLabel3.setText("Ingrese el Id del Cliente");

        jLabel4.setText("Ingrese la fecha de inicio(ej. 2025-04-15)");

        jTextFieldIngresoFInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIngresoFInicioActionPerformed(evt);
            }
        });

        jLabel5.setText("Devuelto");

        jLabel6.setText("Ingrese la fecha de regreso(ej. 2025-04-15):");

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(270, 270, 270)
                                .addComponent(jLabel5)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldIngresoIdAlquilerParaActualizar)
                                .addComponent(jTextFieldIngresoIdLibro)
                                .addComponent(jTextFieldIngresoIdCliente)
                                .addComponent(jTextFieldIngresoFInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                .addComponent(jTextFieldIngresoFFin))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jButtonActualizar)
                        .addGap(87, 87, 87)
                        .addComponent(jButtonRegresar)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIngresoIdAlquilerParaActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldIngresoIdLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldIngresoIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldIngresoFInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIngresoFFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonRegresar))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIngresoFInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIngresoFInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIngresoFInicioActionPerformed

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        try {
            
            if (jTextFieldIngresoIdAlquilerParaActualizar.getText().trim().isEmpty() ||
                jTextFieldIngresoIdLibro.getText().trim().isEmpty() ||
                jTextFieldIngresoIdCliente.getText().trim().isEmpty() ||
                jTextFieldIngresoFInicio.getText().trim().isEmpty()) {
                
                JOptionPane.showMessageDialog(this, 
                    "Por favor complete los campos obligatorios:\n- ID del Alquiler\n- ID del Libro\n- ID del Cliente\n- Fecha de Inicio", 
                    "Campos Incompletos", 
                    JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            int idAlquiler = Integer.parseInt(jTextFieldIngresoIdAlquilerParaActualizar.getText().trim());
            int idLibro = Integer.parseInt(jTextFieldIngresoIdLibro.getText().trim());
            int idCliente = Integer.parseInt(jTextFieldIngresoIdCliente.getText().trim());
            
            // Parsear las fechas
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate fechaInicio = LocalDate.parse(jTextFieldIngresoFInicio.getText().trim(), formatter);
            
            
            // La fecha final puede ser opcional (null)
            LocalDate fechaFin = null;
            if (!jTextFieldIngresoFFin.getText().trim().isEmpty()) {
                fechaFin = LocalDate.parse(jTextFieldIngresoFFin.getText().trim(), formatter);
                
                // Validar que la fecha final no sea anterior a la fecha de inicio
                if (fechaFin.isBefore(fechaInicio)) {
                    JOptionPane.showMessageDialog(this, 
                        "La fecha final no puede ser anterior a la fecha de inicio", 
                        "Error en Fechas", 
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
             // Obtener el estado de devuelto del ComboBox
            String devueltoStr = (String) jComboBox1.getSelectedItem();
            Devuelto devuelto = Devuelto.valueOf(devueltoStr);
            
            // Crear los objetos Libro y Cliente con los IDs
            Libro libro = new Libro();
            libro.setId(idLibro);
            
            Cliente cliente = new Cliente();
            cliente.setId(idCliente);
            
            // Crear el objeto Alquiler con el ID
            Alquiler alquiler = new Alquiler();
            alquiler.setId(idAlquiler);
            alquiler.setLibro(libro);
            alquiler.setCliente(cliente);
            alquiler.setFechaDeInicio(fechaInicio);
            alquiler.setFechaFin(fechaFin);
            alquiler.setDevuelto(devuelto);
            
            //Para actualizar el alquler
            boolean actualizado = alquilerDAO.actualizarAlquiler(alquiler);
            
            if (actualizado){
                limpiarCampos();
            }
            
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Los ids deben de ser númericos y válidos", "Error en el formato", JOptionPane.ERROR_MESSAGE);
        } catch(DateTimeParseException e){
            JOptionPane.showMessageDialog(this, "Error en el formato de la fecha y debe de ser: YYYY-MM_DD"
                    + "por ejemplo: 2025-06-03", "Error en el formato", JOptionPane.ERROR_MESSAGE);
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al actualizar el alquiler", "Error de actualización",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();//sirve para localizar el error, ojala no me haya equivocado aquii jaajaj xd
        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActualizarAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActualizarAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActualizarAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActualizarAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ActualizarAlquiler dialog = new ActualizarAlquiler(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextFieldIngresoFFin;
    private javax.swing.JTextField jTextFieldIngresoFInicio;
    private javax.swing.JTextField jTextFieldIngresoIdAlquilerParaActualizar;
    private javax.swing.JTextField jTextFieldIngresoIdCliente;
    private javax.swing.JTextField jTextFieldIngresoIdLibro;
    // End of variables declaration//GEN-END:variables
}
